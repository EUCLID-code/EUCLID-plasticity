function results = global_problem_call(algorithm,material,mesh,bc)
% global_problem_call executes the finite element analysis
%
% ## Comments
% 
% In this function, the finite element analysis is executed. Dependent on
% the type of material (e.g., type of hardening), different finite element
% solvers are called.
% 
% ## Input Arguments
% 
% `algorithm` (_struct_) - structural array containing information needed
% for the algorithm
%
% `material` (_struct_) - structural array containing material information
%
% `mesh` (_struct_) - structural array containing information about the
% finite element mesh
%
% `bc` (_struct_) - structural array containing information about the
% boundary conditions
% 
% ## Output Arguments
% 
% `results` (_struct_) - structural array containing finite element results
% 

tic
if strcmp(material.name,'vonMises')
    [results.u,results.reaction,results.epsilonVp_GP,results.YieldSurface] = ...
        global_problem_PlaneStress_vonMises( ...
        ... % algorithm
        algorithm.n_save_YieldSurface, ...
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        algorithm.n_NR_local, ...
        algorithm.tol_NR_local, ...
        ... % material
        material.E, ...
        material.nu, ...
        material.mu, ...
        material.CPlaneStress, ...
        material.SPlaneStress, ...
        material.sigma_0, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
elseif strcmp(material.name,'Tresca')
    [results.u,results.reaction,results.epsilonVp_GP,results.YieldSurface] = ...
        global_problem_PlaneStress_Tresca( ...
        ... % algorithm
        algorithm.n_save_YieldSurface, ...
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        algorithm.n_NR_local, ...
        algorithm.tol_NR_local, ...
        ... % material
        material.E, ...
        material.nu, ...
        material.mu, ...
        material.CPlaneStress, ...
        material.SPlaneStress, ...
        material.sigma_0, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
elseif contains(material.name,'VEVPHardMixLin')
    [results.time,results.u,results.reaction,results.alphaV_GP,results.epsilonVvp_GP,results.gamma_GP] = ...
        global_problem_PlaneStrain_VEVPHardMixLin( ...
        ... % algorithm
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        ... % material
        material, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_time, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
elseif contains(material.name,'HardIsoLin') || contains(material.name,'HardIsoNonlin')
    [results.u,results.reaction,results.epsilonVp_GP,results.gamma_GP,results.YieldSurface] = ...
        global_problem_PlaneStressHardIsoNonlin( ...
        ... % algorithm
        algorithm.n_save_YieldSurface, ...
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        algorithm.n_NR_local, ...
        algorithm.tol_NR_local, ...
        ... % material
        material.CPlaneStress, ...
        material.SPlaneStress, ...
        material.theta, ...
        material.H_isotropic, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
elseif contains(material.name,'HardMix')
    [results.u,results.reaction,results.epsilonVp_GP,results.gamma_GP,results.sigmaV_back_GP,results.YieldSurface] = ...
        global_problem_PlaneStressHardMixVAF( ...
        ... % algorithm
        algorithm.n_save_YieldSurface, ...
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        algorithm.n_NR_local, ...
        algorithm.tol_NR_local, ...
        ... % material
        material.CPlaneStress, ...
        material.SPlaneStress, ...
        material.theta, ...
        material.H_isotropic, ...
        material.H_kinematic, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
else
    [results.u,results.reaction,results.epsilonVp_GP,results.YieldSurface] = ...
        global_problem_PlaneStress( ...
        ... % algorithm
        algorithm.n_save_YieldSurface, ...
        algorithm.n_NR_global, ...
        algorithm.tol_NR_global, ...
        algorithm.n_NR_local, ...
        algorithm.tol_NR_local, ...
        ... % material
        material.CPlaneStress, ...
        material.SPlaneStress, ...
        material.theta, ...
        ... % mesh
        mesh.n_dof, ...
        mesh.n_element, ...
        mesh.n_dof_per_element, ...
        mesh.element_dof, ...
        mesh.Gauss_weights, ...
        mesh.n_Gauss_per_dim, ...
        mesh.detJ_GP, ...
        mesh.B_GP, ...
        ... % bc
        bc.dof_fix, ...
        bc.dof_displacement, ...
        bc.dof_reaction, ...
        bc.max_displacement, ...
        bc.n_step, ...
        bc.displacement_increment ...
        );
end
toc

end